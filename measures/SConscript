import os, glob

# import root environment
Import( ["buildenv", "installer"])
myenv = buildenv.Clone()

# get all the sourcefiles
#cpps = myenv.Glob("*.cc")
cpps = myenv.SGlob("*.cc", excludedirs=["test"], recursive=True )

# need this to go to the root dir, as SConsript asumes to be in the
# build dir
name = "measures"
libname = "casa_%s" % name
lib = os.path.join(str(myenv["BUILDDIR"]), libname)

# depending on ...
myenv.PrependUnique(LIBS=myenv.GetDependencies(libname))

if not myenv.GetOption("disable_static"):
    slib =  myenv.StaticLibrary(target = lib, source = [cpps])
    myenv.Alias(name, slib)
    installer.AddLibrary(slib)
    
if myenv.GetOption("enable_shared"):
    dlib =  myenv.SharedLibrary(target = lib, source = [cpps])
    myenv.Alias(name, dlib)
    installer.AddLibrary(dlib)

myenv.Default(name)

testenv = myenv.Clone()
sofa_lib = testenv.SConscript(["%s/SConscript" % "fortran"],
                              duplicate=0, exports=["buildenv", "installer"])
# gather test files
# SGlob works in build dir, so only for cc files
tests = testenv.SGlob("test/*.cc")
tests += testenv.SGlob("*/test/*.cc")
# point to tests local includes
print "DEBUGGGGG",lib
testenv.PrependUnique(LIBS=[libname])
testenv.PrependUnique(LIBS=[sofa_lib])
for t in tests:
    testenv.addAssayTest(t)

rootdir = myenv.Dir("#").abspath
# install headers, only works with absolute dir.
installer.AddHeaders( rootdir+"/%s" % name, "*.h", "casacore/%s" % name, True )
installer.AddHeaders( rootdir+"/%s" % name , "*.tcc", "casacore/%s" % name, True )
